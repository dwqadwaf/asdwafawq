C251 COMPILER V5.60.0,  oled                                                               21/06/23  23:51:48  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE oled
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\keil5\C251\BIN\C251.EXE oled.c INTR2 BROWSE DEBUG PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Ob
                    -jects\oled.obj) 

stmt  level    source

    1          //              ----------------------------------------------------------------
    2          //              GND    电源地
    3          //              VCC  接5V或3.3v电源
    4          //              D0   P1^0（SCL）
    5          //              D1   P1^1（SDA）
    6          //              RES  接P12
    7          //              DC   接P13
    8          //              CS   接P14               
    9          #include "oled.h"
   10          //#include "stdlib.h"
   11          #include "oledfont.h"    
   12          //#include "delay.h"
   13          //OLED的显存
   14          //存放格式如下.
   15          //[0]0 1 2 3 ... 127  
   16          //[1]0 1 2 3 ... 127  
   17          //[2]0 1 2 3 ... 127  
   18          //[3]0 1 2 3 ... 127  
   19          //[4]0 1 2 3 ... 127  
   20          //[5]0 1 2 3 ... 127  
   21          //[6]0 1 2 3 ... 127  
   22          //[7]0 1 2 3 ... 127         
   23          void delay_ms(unsigned int ms)
   24          {                         
   25   1        unsigned int a;   
   26   1        unsigned long i;  
   27   1        while(ms)
   28   1        {
   29   2          _nop_();
   30   2          _nop_();
   31   2          i = 2763UL;
   32   2          while (i) i--;
   33   2          ms--;
   34   2        }
   35   1        return;
   36   1      }
*** WARNING C47 IN LINE 25 OF oled.c: 'a': unreferenced local variable
   37          /**********************************************
   38          //IIC Start
   39          **********************************************/
   40          void IIC_Start()
   41          {
   42   1      
   43   1        OLED_SCLK_Set() ;
   44   1        OLED_SDIN_Set();
   45   1        OLED_SDIN_Clr();
   46   1        OLED_SCLK_Clr();
   47   1      }
   48          
   49          /**********************************************
   50          //IIC Stop
   51          **********************************************/
   52          void IIC_Stop()
   53          {
   54   1      OLED_SCLK_Set() ;
   55   1      //  OLED_SCLK_Clr();
   56   1        OLED_SDIN_Clr();
   57   1        OLED_SDIN_Set();
C251 COMPILER V5.60.0,  oled                                                               21/06/23  23:51:48  PAGE 2   

   58   1        
   59   1      }
   60          
   61          void IIC_Wait_Ack()
   62          {
   63   1      
   64   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
   65   1        //GPIOB->CRH |= 0x00080000;
   66   1      //  OLED_SDA = 1;
   67   1      //  delay_us(1);
   68   1        //OLED_SCL = 1;
   69   1        //delay_us(50000);
   70   1      /*  while(1)
   71   1        {
   72   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
   73   1          {
   74   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
   75   1            //GPIOB->CRH |= 0x00030000;
   76   1            return;
   77   1          }
   78   1        }
   79   1      */
   80   1        OLED_SCLK_Set() ;
   81   1        OLED_SCLK_Clr();
   82   1      }
   83          /**********************************************
   84          // IIC Write byte
   85          **********************************************/
   86          
   87          void Write_IIC_Byte(unsigned char IIC_Byte)
   88          {
   89   1        unsigned char i;
   90   1        unsigned char m,da;
   91   1        da=IIC_Byte;
   92   1        OLED_SCLK_Clr();
   93   1        for(i=0;i<8;i++)    
   94   1        {
   95   2            m=da;
   96   2          //  OLED_SCLK_Clr();
   97   2          m=m&0x80;
   98   2          if(m==0x80)
   99   2          {OLED_SDIN_Set();}
  100   2          else OLED_SDIN_Clr();
  101   2            da=da<<1;
  102   2          OLED_SCLK_Set();
  103   2          OLED_SCLK_Clr();
  104   2          }
  105   1      
  106   1      
  107   1      }
  108          /**********************************************
  109          // IIC Write Command
  110          **********************************************/
  111          void Write_IIC_Command(unsigned char IIC_Command)
  112          {
  113   1         IIC_Start();
  114   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
  115   1        IIC_Wait_Ack(); 
  116   1         Write_IIC_Byte(0x00);      //write command
  117   1        IIC_Wait_Ack(); 
  118   1         Write_IIC_Byte(IIC_Command); 
  119   1        IIC_Wait_Ack(); 
  120   1         IIC_Stop();
  121   1      }
  122          /**********************************************
  123          // IIC Write Data
C251 COMPILER V5.60.0,  oled                                                               21/06/23  23:51:48  PAGE 3   

  124          **********************************************/
  125          void Write_IIC_Data(unsigned char IIC_Data)
  126          {
  127   1         IIC_Start();
  128   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
  129   1        IIC_Wait_Ack(); 
  130   1         Write_IIC_Byte(0x40);      //write data
  131   1        IIC_Wait_Ack(); 
  132   1         Write_IIC_Byte(IIC_Data);
  133   1        IIC_Wait_Ack(); 
  134   1         IIC_Stop();
  135   1      }
  136          void OLED_WR_Byte(unsigned dat,unsigned cmd)
  137          {
  138   1        if(cmd)
  139   1            {
  140   2      
  141   2         Write_IIC_Data(dat);
*** WARNING C188 IN LINE 141 OF oled.c: 'parameter 1': value truncated
  142   2         
  143   2          }
  144   1        else {
  145   2         Write_IIC_Command(dat);
*** WARNING C188 IN LINE 145 OF oled.c: 'parameter 1': value truncated
  146   2          
  147   2        }
  148   1      
  149   1      
  150   1      }
  151          
  152          /********************************************
  153          // fill_Picture
  154          ********************************************/
  155          void fill_picture(unsigned char fill_Data)
  156          {
  157   1        unsigned char m,n;
  158   1        for(m=0;m<8;m++)
  159   1        {
  160   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
  161   2          OLED_WR_Byte(0x00,0);   //low column start address
  162   2          OLED_WR_Byte(0x10,0);   //high column start address
  163   2          for(n=0;n<128;n++)
  164   2            {
  165   3              OLED_WR_Byte(fill_Data,1);
  166   3            }
  167   2        }
  168   1      }
  169          
  170          
  171          /***********************Delay****************************************/
  172          void Delay_50ms(unsigned int Del_50ms)
  173          {
  174   1        unsigned int m;
  175   1        for(;Del_50ms>0;Del_50ms--)
  176   1          for(m=6245;m>0;m--);
  177   1      }
  178          
  179          void Delay_1ms(unsigned int Del_1ms)
  180          {
  181   1        unsigned char j;
  182   1        while(Del_1ms--)
  183   1        { 
  184   2          for(j=0;j<123;j++);
  185   2        }
  186   1      }
  187          
C251 COMPILER V5.60.0,  oled                                                               21/06/23  23:51:48  PAGE 4   

  188          //坐标设置
  189          
  190            void OLED_Set_Pos(unsigned char x, unsigned char y) 
  191          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
  192   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  193   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
  194   1      }       
  195          //开启OLED显示    
  196          void OLED_Display_On(void)
  197          {
  198   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  199   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
  200   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
  201   1      }
  202          //关闭OLED显示     
  203          void OLED_Display_Off(void)
  204          {
  205   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  206   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
  207   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
  208   1      }            
  209          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
  210          void OLED_Clear(void)  
  211          {  
  212   1        u8 i,n;       
  213   1        for(i=0;i<8;i++)  
  214   1        {  
  215   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
  216   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
  217   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
  218   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
  219   2        } //更新显示
  220   1      }
  221          void OLED_On(void)  
  222          {  
  223   1        u8 i,n;       
  224   1        for(i=0;i<8;i++)  
  225   1        {  
  226   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
  227   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
  228   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
  229   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
  230   2        } //更新显示
  231   1      }
  232          //在指定位置显示一个字符,包括部分字符
  233          //x:0~127
  234          //y:0~63
  235          //mode:0,反白显示;1,正常显示         
  236          //size:选择字体 16/12 
  237          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
  238          {       
  239   1        unsigned char c=0,i=0;  
  240   1          c=chr-' ';//得到偏移后的值      
  241   1          if(x>Max_Column-1){x=0;y=y+2;}
  242   1          if(Char_Size ==16)
  243   1            {
  244   2            OLED_Set_Pos(x,y);  
  245   2            for(i=0;i<8;i++)
  246   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
  247   2            OLED_Set_Pos(x,y+1);
*** WARNING C188 IN LINE 247 OF oled.c: 'parameter 2': value truncated
  248   2            for(i=0;i<8;i++)
  249   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
  250   2            }
  251   1            else {  
  252   2              OLED_Set_Pos(x,y);
C251 COMPILER V5.60.0,  oled                                                               21/06/23  23:51:48  PAGE 5   

  253   2              for(i=0;i<6;i++)
  254   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
  255   2              
  256   2            }
  257   1      }
  258          //m^n函数
  259          u32 oled_pow(u8 m,u8 n)
  260          {
  261   1        u32 result=1;  
  262   1        while(n--)result*=m;    
  263   1        return result;
  264   1      }         
  265          //显示2个数字
  266          //x,y :起点坐标  
  267          //len :数字的位数
  268          //size:字体大小
  269          //mode:模式 0,填充模式;1,叠加模式
  270          //num:数值(0~4294967295);       
  271          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
  272          {           
  273   1        u8 t,temp;
  274   1        u8 enshow=0;               
  275   1        for(t=0;t<len;t++)
  276   1        {
  277   2          temp=(num/oled_pow(10,len-t-1))%10;
*** WARNING C188 IN LINE 277 OF oled.c: 'parameter 2': value truncated
  278   2          if(enshow==0&&t<(len-1))
  279   2          {
  280   3            if(temp==0)
  281   3            {
  282   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
*** WARNING C188 IN LINE 282 OF oled.c: 'parameter 1': value truncated
  283   4              continue;
  284   4            }else enshow=1; 
  285   3             
  286   3          }
  287   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
*** WARNING C188 IN LINE 287 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 287 OF oled.c: 'parameter 3': value truncated
  288   2        }
  289   1      } 
  290          //显示一个字符号串
  291          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
  292          {
  293   1        unsigned char j=0;
  294   1        while (chr[j]!='\0')
  295   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
  296   2            x+=8;
  297   2          if(x>120){x=0;y+=2;}
  298   2            j++;
  299   2        }
  300   1      }
  301          //显示汉字
  302          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
  303          {               
  304   1        u8 t,adder=0;
  305   1        OLED_Set_Pos(x,y);  
  306   1          for(t=0;t<16;t++)
  307   1          {
  308   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
  309   2              adder+=1;
  310   2           }  
  311   1          OLED_Set_Pos(x,y+1);  
*** WARNING C188 IN LINE 311 OF oled.c: 'parameter 2': value truncated
  312   1          for(t=0;t<16;t++)
  313   1            { 
C251 COMPILER V5.60.0,  oled                                                               21/06/23  23:51:48  PAGE 6   

  314   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
  315   2              adder+=1;
  316   2            }         
  317   1      }
  318          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7***************
             -**/
  319          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP
             -[])
  320          {   
  321   1       unsigned int j=0;
  322   1       unsigned char x,y;
  323   1        
  324   1        if(y1%8==0) y=y1/8;      
  325   1        else y=y1/8+1;
  326   1        for(y=y0;y<y1;y++)
  327   1        {
  328   2          OLED_Set_Pos(x0,y);
  329   2          for(x=x0;x<x1;x++)
  330   2            {      
  331   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
  332   3            }
  333   2        }
  334   1      } 
  335          
  336          //初始化SSD1306             
  337          void OLED_Init(void)
  338          {   
  339   1       
  340   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
  341   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
  342   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
  343   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
  344   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
  345   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
  346   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
  347   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
  348   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
  349   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
  350   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
  351   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
  352   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
  353   1        OLED_WR_Byte(0x00,OLED_CMD);//
  354   1        
  355   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
  356   1        OLED_WR_Byte(0x80,OLED_CMD);//
  357   1        
  358   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
  359   1        OLED_WR_Byte(0x05,OLED_CMD);//
  360   1        
  361   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
  362   1        OLED_WR_Byte(0xF1,OLED_CMD);//
  363   1        
  364   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
  365   1        OLED_WR_Byte(0x12,OLED_CMD);//
  366   1        
  367   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
  368   1        OLED_WR_Byte(0x30,OLED_CMD);//
  369   1        
  370   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
  371   1        OLED_WR_Byte(0x14,OLED_CMD);//
  372   1        
  373   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
  374   1      }  
  375          
  376          
  377          
C251 COMPILER V5.60.0,  oled                                                               21/06/23  23:51:48  PAGE 7   

  378          
  379          
  380          
  381          
  382          
  383          
  384          
  385          
  386          
  387          
  388          
  389          
  390          
  391          
  392          
  393          
  394          
  395          
  396          
  397          
  398          
  399          
  400          
  401          
  402          
  403          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      4202     ------
  ecode size           =    ------     ------
  data size            =    ------         13
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  9 WARNING(S),  0 ERROR(S)
